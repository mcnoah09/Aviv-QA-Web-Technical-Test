{"uid":"19d02a4a55f615c1","name":"test_existing_user_login_and_checkout","fullName":"tests.test_existing_user_login_and_checkout#test_existing_user_login_and_checkout","historyId":"0ffd637c1be7c4db7d481eefa9abf3cd","time":{"start":1711121533499,"stop":1711121539068,"duration":5569},"description":"\n    Test existing user login and checkout\n\n    :param driver: WebDriver instance\n    :param wait: WebDriverWait instance\n    :param fake: Faker instance\n    :param auth: Tuple of email and password of an existing user\n\n    :return: None\n    ","descriptionHtml":"<pre><code>Test existing user login and checkout\n\n:param driver: WebDriver instance\n:param wait: WebDriverWait instance\n:param fake: Faker instance\n:param auth: Tuple of email and password of an existing user\n\n:return: None\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55b0c626ff33 <unknown>\n#1 0x55b0c5f67ce6 <unknown>\n#2 0x55b0c5fb2e48 <unknown>\n#3 0x55b0c5fb2f01 <unknown>\n#4 0x55b0c5ff63f4 <unknown>\n#5 0x55b0c5fd4edd <unknown>\n#6 0x55b0c5ff3899 <unknown>\n#7 0x55b0c5fd4c53 <unknown>\n#8 0x55b0c5fa5db3 <unknown>\n#9 0x55b0c5fa677e <unknown>\n#10 0x55b0c623586b <unknown>\n#11 0x55b0c6239885 <unknown>\n#12 0x55b0c6223181 <unknown>\n#13 0x55b0c623a412 <unknown>\n#14 0x55b0c620725f <unknown>\n#15 0x55b0c625e528 <unknown>\n#16 0x55b0c625e723 <unknown>\n#17 0x55b0c626f0e4 <unknown>\n#18 0x7fbc67494ac3 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f811bdcb14fe7e472a2985e277184c0b\")>\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"f811bdcb14fe7e472a2985e277184c0b\")>\nfake = <faker.proxy.Faker object at 0x7fe3c3dd91b0>\nauth = ('stuarterica@example.com', '+X1nJvPw*k')\n\n    def test_existing_user_login_and_checkout(\n        driver: webdriver, wait: WebDriverWait, fake: Faker, auth: Tuple[str, str]\n    ):\n        \"\"\"\n        Test existing user login and checkout\n    \n        :param driver: WebDriver instance\n        :param wait: WebDriverWait instance\n        :param fake: Faker instance\n        :param auth: Tuple of email and password of an existing user\n    \n        :return: None\n        \"\"\"\n        email, password = auth\n    \n        # 2. Login with the registered user\n>       login_user(driver=driver, wait=wait, email=email, password=password)\n\ntests/test_existing_user_login_and_checkout.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/helpers/utils.py:149: in login_user\n    assert wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f811bdcb14fe7e472a2985e277184c0b\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7fe3c38fe0e0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55b0c626ff33 <unknown>\nE       #1 0x55b0c5f67ce6 <unknown>\nE       #2 0x55b0c5fb2e48 <unknown>\nE       #3 0x55b0c5fb2f01 <unknown>\nE       #4 0x55b0c5ff63f4 <unknown>\nE       #5 0x55b0c5fd4edd <unknown>\nE       #6 0x55b0c5ff3899 <unknown>\nE       #7 0x55b0c5fd4c53 <unknown>\nE       #8 0x55b0c5fa5db3 <unknown>\nE       #9 0x55b0c5fa677e <unknown>\nE       #10 0x55b0c623586b <unknown>\nE       #11 0x55b0c6239885 <unknown>\nE       #12 0x55b0c6223181 <unknown>\nE       #13 0x55b0c623a412 <unknown>\nE       #14 0x55b0c620725f <unknown>\nE       #15 0x55b0c625e528 <unknown>\nE       #16 0x55b0c625e723 <unknown>\nE       #17 0x55b0c626f0e4 <unknown>\nE       #18 0x7fbc67494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/avivwebtechnicaltest-fB1-sQPL-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1711121515886,"stop":1711121515950,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1711121531753,"stop":1711121532279,"duration":526},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wait","time":{"start":1711121532280,"stop":1711121532280,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fake","time":{"start":1711121532280,"stop":1711121532298,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth","time":{"start":1711121532298,"stop":1711121533498,"duration":1200},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n    Test existing user login and checkout\n\n    :param driver: WebDriver instance\n    :param wait: WebDriverWait instance\n    :param fake: Faker instance\n    :param auth: Tuple of email and password of an existing user\n\n    :return: None\n    ","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55b0c626ff33 <unknown>\n#1 0x55b0c5f67ce6 <unknown>\n#2 0x55b0c5fb2e48 <unknown>\n#3 0x55b0c5fb2f01 <unknown>\n#4 0x55b0c5ff63f4 <unknown>\n#5 0x55b0c5fd4edd <unknown>\n#6 0x55b0c5ff3899 <unknown>\n#7 0x55b0c5fd4c53 <unknown>\n#8 0x55b0c5fa5db3 <unknown>\n#9 0x55b0c5fa677e <unknown>\n#10 0x55b0c623586b <unknown>\n#11 0x55b0c6239885 <unknown>\n#12 0x55b0c6223181 <unknown>\n#13 0x55b0c623a412 <unknown>\n#14 0x55b0c620725f <unknown>\n#15 0x55b0c625e528 <unknown>\n#16 0x55b0c625e723 <unknown>\n#17 0x55b0c626f0e4 <unknown>\n#18 0x7fbc67494ac3 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f811bdcb14fe7e472a2985e277184c0b\")>\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"f811bdcb14fe7e472a2985e277184c0b\")>\nfake = <faker.proxy.Faker object at 0x7fe3c3dd91b0>\nauth = ('stuarterica@example.com', '+X1nJvPw*k')\n\n    def test_existing_user_login_and_checkout(\n        driver: webdriver, wait: WebDriverWait, fake: Faker, auth: Tuple[str, str]\n    ):\n        \"\"\"\n        Test existing user login and checkout\n    \n        :param driver: WebDriver instance\n        :param wait: WebDriverWait instance\n        :param fake: Faker instance\n        :param auth: Tuple of email and password of an existing user\n    \n        :return: None\n        \"\"\"\n        email, password = auth\n    \n        # 2. Login with the registered user\n>       login_user(driver=driver, wait=wait, email=email, password=password)\n\ntests/test_existing_user_login_and_checkout.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/helpers/utils.py:149: in login_user\n    assert wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f811bdcb14fe7e472a2985e277184c0b\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7fe3c38fe0e0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55b0c626ff33 <unknown>\nE       #1 0x55b0c5f67ce6 <unknown>\nE       #2 0x55b0c5fb2e48 <unknown>\nE       #3 0x55b0c5fb2f01 <unknown>\nE       #4 0x55b0c5ff63f4 <unknown>\nE       #5 0x55b0c5fd4edd <unknown>\nE       #6 0x55b0c5ff3899 <unknown>\nE       #7 0x55b0c5fd4c53 <unknown>\nE       #8 0x55b0c5fa5db3 <unknown>\nE       #9 0x55b0c5fa677e <unknown>\nE       #10 0x55b0c623586b <unknown>\nE       #11 0x55b0c6239885 <unknown>\nE       #12 0x55b0c6223181 <unknown>\nE       #13 0x55b0c623a412 <unknown>\nE       #14 0x55b0c620725f <unknown>\nE       #15 0x55b0c625e528 <unknown>\nE       #16 0x55b0c625e723 <unknown>\nE       #17 0x55b0c626f0e4 <unknown>\nE       #18 0x7fbc67494ac3 <unknown>\n\n../../../.cache/pypoetry/virtualenvs/avivwebtechnicaltest-fB1-sQPL-py3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[],"attachments":[{"uid":"45fb370c5544194","name":"test_existing_user_login_and_checkout_failure.png","source":"45fb370c5544194.png","type":"image/png","size":133202},{"uid":"d400873c8370d849","name":"log","source":"d400873c8370d849.txt","type":"text/plain","size":355}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1711121539232,"stop":1711121539290,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_existing_user_login_and_checkout"},{"name":"host","value":"fv-az1385-502"},{"name":"thread","value":"2988-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_existing_user_login_and_checkout"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":2,"unknown":0,"total":4},"items":[{"uid":"8caf1d67c8822926","reportUrl":"https://mcnoah09.github.io/Aviv-QA-Web-Technical-Test/17//#testresult/8caf1d67c8822926","status":"passed","time":{"start":1711121221801,"stop":1711121228809,"duration":7008}},{"uid":"31c02c193ecb50a3","reportUrl":"https://mcnoah09.github.io/Aviv-QA-Web-Technical-Test/16//#testresult/31c02c193ecb50a3","status":"passed","time":{"start":1711120933142,"stop":1711120940003,"duration":6861}},{"uid":"d324f9361a4a6b5e","reportUrl":"https://mcnoah09.github.io/Aviv-QA-Web-Technical-Test/15//#testresult/d324f9361a4a6b5e","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5588206f6f33 <unknown>\n#1 0x5588203eece6 <unknown>\n#2 0x558820439e48 <unknown>\n#3 0x558820439f01 <unknown>\n#4 0x55882047d3f4 <unknown>\n#5 0x55882045bedd <unknown>\n#6 0x55882047a899 <unknown>\n#7 0x55882045bc53 <unknown>\n#8 0x55882042cdb3 <unknown>\n#9 0x55882042d77e <unknown>\n#10 0x5588206bc86b <unknown>\n#11 0x5588206c0885 <unknown>\n#12 0x5588206aa181 <unknown>\n#13 0x5588206c1412 <unknown>\n#14 0x55882068e25f <unknown>\n#15 0x5588206e5528 <unknown>\n#16 0x5588206e5723 <unknown>\n#17 0x5588206f60e4 <unknown>\n#18 0x7f460e894ac3 <unknown>","time":{"start":1711120248540,"stop":1711120254284,"duration":5744}}]},"tags":[]},"source":"19d02a4a55f615c1.json","parameterValues":[]}